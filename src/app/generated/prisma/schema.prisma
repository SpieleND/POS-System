// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String   @default("SYSTEM")
  updatedBy String   @default("SYSTEM")
  isDeleted Boolean  @default(false)
  users     User[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  rfidKey   String?  @unique
  roleId    Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String   @default("SYSTEM")
  updatedBy String   @default("SYSTEM")
  isDeleted Boolean  @default(false)
  role      Role     @relation(fields: [roleId], references: [id])
  orders    Order[]
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  buy       Float    @default(0)
  sell      Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String   @default("SYSTEM")
  updatedBy String   @default("SYSTEM")
  isDeleted Boolean  @default(false)
  orders    Order[]
}

model Order {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  paid      Boolean
  aproved   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String
  updatedBy String
  isDeleted Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
